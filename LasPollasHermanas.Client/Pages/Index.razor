@page "/"
@using Models;
@using Data;
@inject NavigationManager NavigationManager

<head>
    <link rel="stylesheet" href="/css/index.css">
</head>
<h1>Las Pollas Hermanas Catalog</h1>
<table class="table table-striped table-bordered table-hover">
    <thead class="table-dark" style="text-align: center;">
        <th>Id</th>
        <th>Name</th>
        <th>Price</th>
        <th>Size</th>
        <th>Expire Date</th>
        <th>Material</th>
        <th>Color</th>
        <th>Stock</th>
        <th></th>
        <th></th>
    </thead>
    @if (dildos is null)
    {
        <p><em>Loading ...</em></p>
    }
    else
    {
        <tbody style="text-align: center;">
            @foreach (var dildo in dildos)
            {
                <tr>
                    <td>@dildo.Id</td>
                    <td>@dildo.Name</td>
                    <td>@dildo.Price</td>
                    <td>@dildo.Size</td>
                    <td>@dildo.ExpireDate</td>
                    <td>@dildo.Material</td>
                    <td>@dildo.Color</td>
                    <td>@dildo.Stock</td>
                    <td><img src="./img/edit.svg" height="50" width="40" @onclick="() => EditDildo(dildo.Id)" /></td>
                    <td><img src="./img/delete.svg" height="50" width="40" @onclick="() => PopUp(dildo.Id)" /></td>
                </tr>
            }
        </tbody>
    }
</table>
<div class="row mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="CreateDildo">New Dildo</button>
    </div>
</div>

<div class="@PopupClass">
    <div class="confirmation-dialog">
        <h2>¿Estás seguro de que deseas eliminar este elemento?</h2>
        <div class="confirmation-buttons">
            <button class="confirmation-button" @onclick="RemoveDildo">Sí</button>
            <button class="confirmation-button cancel" @onclick="PopUp">No</button>
        </div>
    </div>
</div>

@code
{
    bool conditionPopUp { get; set; } = false;

    private int id;

    string PopupClass => conditionPopUp ? "active" : "inactive";
    private Dildo[]? dildos;
    protected override void OnInitialized()
    {
        dildos = DildoClient.GetDildos();
    }

    private void PopUp(int id)
    {
        this.conditionPopUp = !this.conditionPopUp;
        this.id = id;

    }

    private void RemoveDildo()
    {
        // Lógica de eliminación
        DildoClient.RemoveDildo(id);
        dildos = DildoClient.GetDildos();

        PopUp();
        StateHasChanged();
    }

    private void EditDildo(int dildoId)
    {
        NavigationManager.NavigateTo($"/edit/dildo/{dildoId}");
    }
    private void PopUp()
    {
        this.conditionPopUp = !this.conditionPopUp;
    }

    private void CreateDildo()
    {
        NavigationManager.NavigateTo("dildo");
    }
}